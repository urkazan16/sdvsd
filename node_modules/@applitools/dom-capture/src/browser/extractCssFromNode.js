'use strict';

function makeExtractCssFromNode({fetchCss, absolutizeUrl}) {
  return async function extractCssFromNode(node, baseUrl) {
    let cssText, resourceUrl, isUnfetched;
    if (isStyleElement(node)) {
      cssText = Array.from(node.childNodes)
        .map(node => node.nodeValue)
        .join('');
      resourceUrl = baseUrl;
    } else if (isLinkToStyleSheet(node)) {
      resourceUrl = absolutizeUrl(getHrefAttr(node), baseUrl);
      cssText = await fetchCss(resourceUrl);
      if (cssText === undefined) {
        isUnfetched = true;
      }
    }
    return {cssText, resourceUrl, isUnfetched};
  };
}

function isStyleElement(node) {
  return node.nodeName && node.nodeName.toUpperCase() === 'STYLE';
}

function getHrefAttr(node) {
  const attr = Array.from(node.attributes).find(attr => attr.name.toLowerCase() === 'href');
  return attr && attr.value;
}

function isLinkToStyleSheet(node) {
  return (
    node.nodeName &&
    node.nodeName.toUpperCase() === 'LINK' &&
    node.attributes &&
    Array.from(node.attributes).find(
      attr => attr.name.toLowerCase() === 'rel' && attr.value.toLowerCase() === 'stylesheet',
    )
  );
}

module.exports = makeExtractCssFromNode;
