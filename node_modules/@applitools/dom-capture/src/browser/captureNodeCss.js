'use strict';

function makeCaptureNodeCss({extractCssFromNode, getBundledCssFromCssText, unfetchedToken}) {
  return async function captureNodeCss(node, baseUrl) {
    const {resourceUrl, cssText, isUnfetched} = await extractCssFromNode(node, baseUrl);

    let unfetchedResources;
    let bundledCss = '';
    if (cssText) {
      const {
        bundledCss: nestedCss,
        unfetchedResources: nestedUnfetched,
      } = await getBundledCssFromCssText(cssText, resourceUrl);

      bundledCss += nestedCss;
      unfetchedResources = new Set(nestedUnfetched);
    } else if (isUnfetched) {
      bundledCss += `${unfetchedToken}${resourceUrl}${unfetchedToken}`;
      unfetchedResources = new Set([resourceUrl]);
    }
    return {bundledCss, unfetchedResources};
  };
}

module.exports = makeCaptureNodeCss;
