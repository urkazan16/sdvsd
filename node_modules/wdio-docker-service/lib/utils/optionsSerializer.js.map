{"version":3,"sources":["../../src/utils/optionsSerializer.js"],"names":["RX_SPACES","serializeOptions","opt","Object","keys","reduce","acc","key","fixedKey","value","sanitizeValue","option","serializeOption","Array","isArray","concat","push","prefix","length","item","process","platform","replace"],"mappings":";;;;;;;;;;AAAA;;;;AAEA,MAAMA,SAAS,GAAG,OAAlB;AACA;;;;;AAKO,SAASC,gBAAT,CAA0BC,GAA1B,EAA+B;AAClC,SAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,CAAwB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzC,UAAMC,QAAQ,GAAG,0BAAYD,GAAZ,CAAjB;AACA,UAAME,KAAK,GAAGC,aAAa,CAACR,GAAG,CAACK,GAAD,CAAJ,CAA3B;AACA,UAAMI,MAAM,GAAGC,eAAe,CAACJ,QAAD,EAAWC,KAAX,CAA9B;;AACA,QAAIE,MAAJ,EAAY;AACR,UAAIE,KAAK,CAACC,OAAN,CAAcH,MAAd,CAAJ,EAA2B;AACvB,eAAOL,GAAG,CAACS,MAAJ,CAAWJ,MAAX,CAAP;AACH;;AACDL,MAAAA,GAAG,CAACU,IAAJ,CAASL,MAAT;AACH;;AACD,WAAOL,GAAP;AACH,GAXM,EAWJ,EAXI,CAAP;AAYH;AAED;;;;;;;AAKO,SAASM,eAAT,CAAyBL,GAAzB,EAA8BE,KAA9B,EAAqC;AACxC,QAAMQ,MAAM,GAAGV,GAAG,CAACW,MAAJ,GAAa,CAAb,GAAiB,IAAjB,GAAwB,GAAvC;;AAEA,MAAI,OAAOT,KAAP,KAAiB,SAAjB,IAA8BA,KAAlC,EAAyC;AACrC,WAAO,CAAE,GAAEQ,MAAO,GAAEV,GAAI,EAAjB,CAAP;AACH;;AAED,MAAI,OAAOE,KAAP,KAAiB,QAArB,EAA+B;AAC3B,WAAO,CAAE,GAAEQ,MAAO,GAAEV,GAAI,IAAGE,KAAM,EAA1B,CAAP;AACH;;AAED,MAAII,KAAK,CAACC,OAAN,CAAcL,KAAd,CAAJ,EAA0B;AACtB,WAAOA,KAAK,CAACJ,MAAN,CAAa,CAACC,GAAD,EAAMa,IAAN,KAAe;AAC/Bb,MAAAA,GAAG,CAACU,IAAJ,CAAU,GAAEC,MAAO,GAAEV,GAAI,IAAGY,IAAK,EAAjC;AACA,aAAOb,GAAP;AACH,KAHM,EAGJ,EAHI,CAAP;AAIH;AACJ;AAED;;;;;;AAIO,SAASI,aAAT,CAAuBD,KAAvB,EAA8B;AACjC,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,WAAOA,KAAP;AACH;;AACD,SAAOW,OAAO,CAACC,QAAR,KAAqB,OAArB,GAA+BZ,KAA/B,GAAuCA,KAAK,CAACa,OAAN,CAActB,SAAd,EAAyB,KAAzB,CAA9C;AACH;;eAEcC,gB","sourcesContent":["import camelToDash from './camelToDash';\n\nconst RX_SPACES = /(\\s)/g;\n/**\n * @param {Object} opt Options to serialize\n * @return {Array}\n */\n\nexport function serializeOptions(opt) {\n    return Object.keys(opt).reduce((acc, key) => {\n        const fixedKey = camelToDash(key);\n        const value = sanitizeValue(opt[key]);\n        const option = serializeOption(fixedKey, value);\n        if (option) {\n            if (Array.isArray(option)) {\n                return acc.concat(option);\n            }\n            acc.push(option);\n        }\n        return acc;\n    }, []);\n}\n\n/**\n * @param {String} key\n * @param {*} value\n * @return {Array}\n */\nexport function serializeOption(key, value) {\n    const prefix = key.length > 1 ? '--' : '-';\n\n    if (typeof value === 'boolean' && value) {\n        return [`${prefix}${key}`];\n    }\n\n    if (typeof value === 'string') {\n        return [`${prefix}${key} ${value}`];\n    }\n\n    if (Array.isArray(value)) {\n        return value.reduce((acc, item) => {\n            acc.push(`${prefix}${key} ${item}`);\n            return acc;\n        }, []);\n    }\n}\n\n/**\n * @param {*} value\n * @return {void | string | *}\n */\nexport function sanitizeValue(value) {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    return process.platform === 'win32' ? value : value.replace(RX_SPACES, '\\\\ ');\n}\n\nexport default serializeOptions;\n"],"file":"optionsSerializer.js"}